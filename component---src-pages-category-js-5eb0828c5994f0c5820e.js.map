{"version":3,"sources":["webpack:////Volumes/Data/working/Unitz/ws-app-web/modules/unitz-pages/CategoryList/View.js","webpack:////Volumes/Data/working/Unitz/ws-app-web/modules/unitz-pages/CategoryList/index.js","webpack:////Volumes/Data/working/Unitz/ws-app-web/modules/unitz-pages/CategoryList/Data.js","webpack:///./src/pages/category.js"],"names":["Index","DIV","className","ctx","get","map","cat","key","Link","to","apply","Data","bindings","pageContainer","rules","data","loadingModel","hook","useLoadingModel","fetchProfile","isLoading","display","notLoading","View","CategoryIndex","props","allContentfulCategory","useStaticQuery","categories","location","PageData","SEO","pageData","name","POS","forceCtx","debug","set","CategoryList"],"mappings":"qOAoBeA,EAbD,kBACZ,kBAACC,EAAA,EAAD,CAAKC,UAAU,kBAAf,yDACE,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,mBACZC,EAAIC,IAAI,aAAc,IAAIC,KAAI,SAACC,GAAD,OAC7B,yBAAKC,IAAK,IAAMD,EAAK,OACnB,kBAACE,EAAA,EAAD,CAAMC,GAAIN,EAAIO,MAAM,mBAAoB,WAAYJ,IAAO,IAAMA,EAAK,cAAe,e,YCVhFK,ECAEC,YAAS,CACxBC,cAAe,CACbC,MAAO,CACL,CACE,OACA,CACEC,KAAM,CACJC,aAAcC,YAAKC,aAAgB,iBAAO,CAAEC,cAAc,YAMpEC,UAAW,CACTN,MAAO,CACL,CACE,UACA,CACEO,QAASJ,aAAK,SAACd,GAAD,OAASA,EAAIO,MAAM,iCAKzCY,WAAY,CACVR,MAAO,CACL,CACE,UACA,CACEO,QAASJ,aAAK,SAACd,GAAD,OAAUA,EAAIO,MAAM,kCD5B7BC,CAAKY,G,wBEoDLC,UAvCO,SAACC,GACrB,IAAMC,EAAwBC,yBAAe,cAcvCC,EAAa,IAAMF,EAAuB,8BAA+B,IAE/E,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQG,SAAUJ,EAAMI,SAAUC,SAAUA,KAC1C,kBAAC7B,EAAA,EAAD,+DACE,kBAAC8B,EAAA,EAAD,CAAKC,SAAU7B,EAAIO,MAAM,eAAgB,CAAEuB,KAAM,eACjD,kBAAC,IAAOC,IAAR,CAAYD,KAAK,cAAc9B,EAAIO,MAAM,oBAAqB,CAAEuB,KAAM,0BACtE,kBAAC,IAAOC,IAAR,CAAYD,KAAK,YACf,yBAAK/B,UAAU,mBAAf,oBACA,kBAACD,EAAA,EAAD,CAAKkC,UAAQ,IAAb,yDACGhC,EAAIiC,OAAM,WACTjC,EAAIkC,IAAI,aAAcT,MAExB,kBAACU,EAAD,WAGJ,kBAAC,IAAOJ,IAAR,CAAYD,KAAK,cAAc9B,EAAIO,MAAM,oBAAqB,CAAEuB,KAAM","file":"component---src-pages-category-js-5eb0828c5994f0c5820e.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { ctx } from '@vl/redata';\nimport DIV from '@vl/redata/DIV.macro';\nimport { Link } from '@uz/unitz-components-web/Link';\n\nconst Index = () => (\n  <DIV className=\"pageContainer\">\n    <div className=\"none-container relative\"></div>\n    <div className=\"wrapper app-row\">\n      {ctx.get('categories', []).map((cat) => (\n        <div key={_.get(cat, 'id')}>\n          <Link to={ctx.apply('routeStore.toUrl', 'category', cat)}>{_.get(cat, 'displayName', '')}</Link>\n        </div>\n      ))}\n    </div>\n  </DIV>\n);\n\nexport default Index;\n","import View from './View.js';\nimport Data from './Data.js';\n\nexport default Data(View);\n","import { bindings, hook } from '@vl/redata';\nimport useLoadingModel from '@vl/hooks/useLoadingModel';\n\nconst bindData = bindings({\n  pageContainer: {\n    rules: [\n      [\n        'data',\n        {\n          data: {\n            loadingModel: hook(useLoadingModel(() => ({ fetchProfile: true })))\n          }\n        }\n      ]\n    ]\n  },\n  isLoading: {\n    rules: [\n      [\n        'display',\n        {\n          display: hook((ctx) => ctx.apply('loadingModel.isLoading'))\n        }\n      ]\n    ]\n  },\n  notLoading: {\n    rules: [\n      [\n        'display',\n        {\n          display: hook((ctx) => !ctx.apply('loadingModel.isLoading'))\n        }\n      ]\n    ]\n  }\n});\n\nexport default bindData;\n","import React from 'react';\nimport _ from 'lodash';\n\nimport { ctx } from '@vl/redata';\nimport DIV from '@vl/redata/DIV.macro';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport App from '@uz/unitz-app-web/UserApp';\nimport SEO from '@uz/unitz-layout-web/SEO';\n\nimport CategoryListPage from '@uz/unitz-pages/CategoryList';\n\nimport Layout from '@uz/unitz-layout-web/LayoutMain';\n\nimport PageData from '../data/PageDataQuery';\n\nconst CategoryIndex = (props) => {\n  const allContentfulCategory = useStaticQuery(graphql`\n    query CategoryIndexQuery {\n      allContentfulCategory {\n        nodes {\n          id: contentful_id\n          displayName\n          avatarUrl {\n            id\n          }\n          slug\n        }\n      }\n    }\n  `);\n  const categories = _.get(allContentfulCategory, 'allContentfulCategory.nodes', []);\n\n  return (\n    <App>\n      <Layout location={props.location} PageData={PageData}>\n        <DIV>\n          <SEO pageData={ctx.apply('ctf.findPage', { name: 'Homepage' })} />\n          <Layout.POS name=\"app-header\">{ctx.apply('ctf.renderSection', { name: 'articleNavbarSection' })}</Layout.POS>\n          <Layout.POS name=\"app-body\">\n            <div className=\"wrapper app-row\">Category listing</div>\n            <DIV forceCtx>\n              {ctx.debug(() => {\n                ctx.set('categories', categories);\n              })}\n              <CategoryListPage />\n            </DIV>\n          </Layout.POS>\n          <Layout.POS name=\"app-footer\">{ctx.apply('ctf.renderSection', { name: 'articleFooterSection' })}</Layout.POS>\n        </DIV>\n      </Layout>\n    </App>\n  );\n};\n\nexport default CategoryIndex;\n"],"sourceRoot":""}